/*
 * This source file was generated by the Gradle 'init' task
 */
package io.confluent.example.aws.lambda.auditlog;

import java.util.Base64;
import java.util.Base64.Decoder;
import com.amazonaws.services.lambda.runtime.Context;
import com.amazonaws.services.lambda.runtime.LambdaLogger;
import com.amazonaws.services.lambda.runtime.RequestHandler;
import com.amazonaws.services.lambda.runtime.events.KafkaEvent;
import com.google.gson.Gson;
import com.google.gson.JsonObject;
import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;

public class LambdaConfluentAuditLogToCloudWatch implements RequestHandler<KafkaEvent, Void> {

    Gson gson = new Gson();
    public LambdaConfluentAuditLogToCloudWatch() {

    }

    @Override
    public Void handleRequest(KafkaEvent event, Context context) {
        Decoder base64Decoder = Base64.getDecoder();
        if (context != null) {
            LambdaLogger logger = context.getLogger();
            event.getRecords().forEach((k, v) -> {
                v.forEach((record) -> {
                    JsonObject auditLogEvent = gson.fromJson(new String(base64Decoder.decode(record.getValue())), JsonObject.class);
                    logger.log("Audit Log Event: "+auditLogEvent.toString());
                });
            });
        } else {
            final Logger logger = LogManager.getRootLogger();
            event.getRecords().forEach((k, v) -> {
                v.forEach((record) -> {
                    JsonObject auditLogEvent = gson.fromJson(new String(base64Decoder.decode(record.getValue())), JsonObject.class);
                    logger.info("Audit Log Event: "+auditLogEvent.toString());
                });
            });
        }
        return null;
    }

    public static void main(String[] args) {
        //new App().handleRequest(Map.of("Lambda!", null), null);
    }
}
