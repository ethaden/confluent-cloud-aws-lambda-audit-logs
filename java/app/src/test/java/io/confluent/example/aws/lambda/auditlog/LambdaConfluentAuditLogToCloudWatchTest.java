/*
 * This source file was generated by the Gradle 'init' task
 */
package io.confluent.example.aws.lambda.auditlog;

import java.util.Base64;
import java.util.Base64.Encoder;
import java.util.Arrays;
import java.util.Map;
import org.junit.jupiter.api.Test;
import com.amazonaws.services.lambda.runtime.events.KafkaEvent;
import com.amazonaws.services.lambda.runtime.events.KafkaEvent.KafkaEventRecord;
import com.google.gson.Gson;
import com.google.gson.JsonObject;

class LambdaConfluentAuditLogToCloudWatchTest {
    private String exampleEvent = "{\n" + //
    "    \"datacontenttype\": \"application/json\",\n" + //
    "    \"data\": {\n" + //
    "        \"serviceName\": \"crn://confluent.cloud/\",\n" + //
    "        \"methodName\": \"mds.Authorize\",\n" + //
    "        \"resourceName\": \"crn://confluent.cloud/organization=aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee\",\n" + //
    "        \"authenticationInfo\": {\n" + //
    "            \"principal\": \"User:u-aabbcc\"\n" + //
    "        },\n" + //
    "        \"authorizationInfo\": {\n" + //
    "            \"granted\": true,\n" + //
    "            \"operation\": \"CreateEnvironment\",\n" + //
    "            \"resourceType\": \"Organization\",\n" + //
    "            \"resourceName\": \"organization\",\n" + //
    "            \"patternType\": \"LITERAL\",\n" + //
    "            \"rbacAuthorization\": {\n" + //
    "                \"role\": \"OrganizationAdmin\",\n" + //
    "                \"scope\": {\n" + //
    "                    \"outerScope\": [\n" + //
    "                        \"organization=aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee\"\n" + //
    "                    ]\n" + //
    "                }\n" + //
    "            }\n" + //
    "        },\n" + //
    "        \"request\": {\n" + //
    "            \"correlation_id\": \"-1\"\n" + //
    "        },\n" + //
    "        \"requestMetadata\": {\n" + //
    "            \"request_id\": \"zzzzzzzz-yyyy-xxxx-wwww-yyyyyyyyyyyy\"\n" + //
    "        }\n" + //
    "    },\n" + //
    "    \"subject\": \"crn://confluent.cloud/organization=aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee\",\n" + //
    "    \"specversion\": \"1.0\",\n" + //
    "    \"id\": \"aaaaaaaa-bbbb-cccc-dddd-tttttttttttt\",\n" + //
    "    \"source\": \"crn://confluent.cloud/\",\n" + //
    "    \"time\": \"2024-07-11T16:40:48.283387686Z\",\n" + //
    "    \"type\": \"io.confluent.kafka.server/authorization\"\n" + //
    "}\n" + //
    "";

    @Test void appDeserializes() {

        //Gson gson = new Gson();
        //JsonObject auditLogEvent = gson.fromJson(exampleEvent, JsonObject.class);
        KafkaEventRecord record = new KafkaEventRecord();
        Encoder base64Encoder = Base64.getEncoder();
        record.setValue(base64Encoder.encodeToString(exampleEvent.getBytes()));
        KafkaEvent event = new KafkaEvent();
        event.setRecords(Map.of("1", Arrays.asList(record)));
        LambdaConfluentAuditLogToCloudWatch app = new LambdaConfluentAuditLogToCloudWatch();
        app.handleRequest(event, null);
    }
}
